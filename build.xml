<!--
 * 
 * Hyperbox - Virtual Infrastructure Manager
 * Copyright (C) 2015 Maxime Dor
 * 
 * http://kamax.io/hbox/
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *  
-->

<project name="Hyperbox Client" default="client.build">
	
	<property file="build.properties"/>
	
	<property name="hbox.base.dir"									location="../hyperbox" />
	<property name="api.base.dir"									location="../api" />
	
	<include file="${api.base.dir}/build.xml" as="hbox" />

	<property name="client.base.dir"								location="." />
	<property name="client.dir"										location="${client.base.dir}/src" />

	<property name="client.install.dir.win"							value="C:/Program Files/Hyperbox/Client" />
	<property name="client.install.dir.linux"						value="/opt/hboxc" />
	
	<property name="client.api.dir"									location="${client.dir}/api" />
	<property name="client.api.src.dir"								location="${client.api.dir}/${src.dirname}" />
	<property name="client.api.lib.dir"								location="${client.api.dir}/${lib.dirname}" />
	<property name="client.api.class.dir"							location="${hbox.build.class.dir}/client-api" />
	
	<property name="client.core.dir"								location="${client.dir}/core" />
	<property name="client.core.src.dir"							location="${client.core.dir}/${src.dirname}" />
	<property name="client.core.lib.dir"							location="${client.core.dir}/${lib.dirname}" />
	<property name="client.core.class.dir"						location="${hbox.build.class.dir}/client-core" />
	
	<property name="client.gui.dir"									location="${client.dir}/gui" />
	<property name="client.gui.src.dir"								location="${client.gui.dir}/${src.dirname}" />
	<property name="client.gui.lib.dir"								location="${client.gui.dir}/${lib.dirname}" />
	<property name="client.gui.class.dir"							location="${hbox.build.class.dir}/client-gui" />
	
	<property name="client.out.dir"									location="${client.base.dir}/${out.dirname}" />
	
	<path id="client.api.classpath">
		<path refid="api.classpath"/>
		<pathelement location="${client.api.class.dir}"/>
		<fileset dir="${client.api.lib.dir}" includes="**/*.jar"/>
	</path>
	
	<path id="client.classpath">
		<path refid="client.api.classpath"/>
		<path refid="kryo.api.classpath"/>
		<pathelement location="${client.class.dir}"/>
		<fileset dir="${client.core.lib.dir}" includes="**/*.jar"/>
	</path>
	
	<path id="client.gui.classpath">
		<path refid="client.api.classpath"/>
		<pathelement location="${client.gui.class.dir}"/>
		<fileset dir="${client.gui.lib.dir}" includes="**/*.jar"/>
	</path>
		
	<target name="client.clean">
		<delete dir="${client.out.dir}"/>
	</target>
	
	<target name="client.configureWin" if="ifWin">
		<property name="os.family"						value="win"/>
		<property name="platform"						value="${os.family}.${os.arch}" />
		<property file="${hbox.base.dir}/tools/${platform}/build.properties" />
		<assertDirAvailable dir="${tools.launch4j.dir}" />
		
		<property name="client.install.dir"				location="${client.install.dir.win}"/>
		
		<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${tools.launch4j.dir}/launch4j.jar:${tools.launch4j.dir}/lib/xstream.jar" />
		<property name="client.out.exe"					value="hyperbox.exe"/>
	</target>
	
	<target name="client.configureLinux" if="ifLinux">
		<property name="os.family" 						value="linux"/>

		
		<property name="client.install.dir"				location="${client.install.dir.linux}" />
		<property name="server.install.dir"				location="${server.install.dir.linux}" />
	</target>
	
	<target name="client.configure" depends="client.configureWin, client.configureLinux">
		<assertDirAvailable dir="${tools.src.dir}" />
		<assertDirAvailable dir="${api.src.dir}" />
		<assertDirAvailable dir="${client.api.src.dir}" />
		<assertDirAvailable dir="${client.core.src.dir}" />
		
		<property name="platform"						value="${os.family}.${os.arch}" />
		<property file="${hbox.base.dir}/tools/${platform}/build.properties" />
		
		<property name="os.type" 						value="${os.family}" />
		<exec executable="git" outputProperty="hbox.client.version">
			<arg line="describe --always"/>
		</exec>

		<property name="client.out.dir"						location="${hbox.out.dir}/bin/${platform}/client" />
		<property name="client.out.module.dir"				location="${client.out.dir}/modules" />
		<property name="dist.out.dir"						location="${hbox.out.dir}/dist" />
		
		<property name="client.out.dist.package"			value="hbox-${hbox.version}-${os.type}_${os.arch}-client" />
		
		<echo message="Hyperbox Client Version:             ${hbox.client.version}" />
	</target>
	
	<target name="client.api.compile" depends="client.configure, hbox.api.compile">
		<mkdir dir="${client.api.class.dir}" />
		<javac source="1.6" target="1.6" debug="on" debuglevel="lines" includeantruntime="false" srcdir="${client.api.src.dir}" destdir="${client.api.class.dir}" classpathref="client.api.classpath" />
	</target>
	
	<target name="client.api.deploy">
		<mkdir dir="${client.out.dir}/bin" />
		<mkdir dir="${client.out.dir}/doc" />
		<mkdir dir="${client.out.dir}/doc/manual" />
		<mkdir dir="${client.out.dir}/doc/legal" />
		<mkdir dir="${client.out.dir}/lib" />
		<mkdir dir="${client.out.module.dir}" />
		<copy todir="${client.out.dir}/lib" flatten="true">
			<fileset dir="${api.lib.dir}" includes="**/*.jar" />
		</copy>
		<copy todir="${client.out.dir}/lib" flatten="true">
			<fileset dir="${client.api.lib.dir}" includes="**/*.jar" />
			<fileset dir="${kryo.api.lib.dir}" includes="**/*.jar" />
		</copy>
		<copy todir="${client.out.dir}/doc/legal">
			<fileset dir="${hbox.base.dir}/doc/legal" includes="**/*" />
		</copy>
		<copy todir="${client.out.dir}/doc/manual">
			<fileset dir="${hbox.base.dir}/doc/manual" includes="**/*" />
		</copy>
	</target>
	
	<target name="client.compile" depends="client.api.compile">
    	<mkdir dir="${client.core.class.dir}" />
    	<javac source="1.6" target="1.6" debug="on" debuglevel="lines" includeantruntime="false" srcdir="${client.core.src.dir}" destdir="${client.core.class.dir}" classpathref="client.classpath" />
		<echo file="${client.core.class.dir}/client.build.properties" append="true">version=${hbox.client.version}${line.separator}</echo>
    </target>
	
	<target name="client.deploy" depends="client.api.deploy">
		<copy todir="${client.out.dir}/lib" flatten="true">
			<fileset dir="${client.core.lib.dir}" includes="**/*.jar" />
		</copy>
	</target>

    <target name="client.jar" depends="client.compile, client.deploy">
        <jar destfile="${client.out.dir}/bin/hyperbox-client.jar">
        	<fileset dir="${api.class.dir}" />
			<fileset dir="${client.api.class.dir}" />
        	<fileset dir="${client.core.class.dir}" />
        </jar>
    </target>
	
	<target name="client.gui.compile" depends="client.api.compile">
		<mkdir dir="${client.gui.class.dir}" />
		<javac source="1.6" target="1.6" debug="on" debuglevel="lines" includeantruntime="false" srcdir="${client.gui.src.dir}" destdir="${client.gui.class.dir}" classpathref="client.gui.classpath" />
	</target>
	
	<target name="client.gui.deploy" depends="client.deploy">
		<copy todir="${client.out.dir}/lib" flatten="true">
			<fileset dir="${client.gui.lib.dir}" includes="**/*.jar" />
		</copy>
		<copy todir="${client.out.dir}/icons">
			<fileset dir="${client.gui.dir}/icons" includes="**" />
		</copy>
		<copy todir="${client.out.dir}/icons" overwrite="true">
			<fileset dir="media/img" includes="**" />
		</copy>
	</target>
	
	<target name="client.gui.jar" depends="client.gui.compile, client.gui.deploy">
        <jar destfile="${client.out.dir}/bin/hyperbox-client-gui.jar">
        	<fileset dir="${client.gui.class.dir}" />
        </jar>
    </target>
	
	<target name="client.build.win" depends="client.deploy, client.jar" if="ifWin">
		<launch4j configFile="${client.base.dir}/scripts/launch4j/main.xml" outfile="${client.out.dir}/${client.out.exe}" />
	</target>
	
	<target name="client.build.linux" depends="client.deploy, client.jar" if="ifLinux">
		<copy file="scripts/client/hyperbox" tofile="${client.out.dir}/hyperbox" />
		<chmod file="${client.out.dir}/hyperbox" perm="u+rx,g+rx,o+rx"/>
	</target>
	
	<extension-point name="client.build" depends="client.jar, client.gui.jar, client.build.linux, client.build.win"  />
	
	<target name="client.build.zip" depends="client.build">
		<zip destfile="${dist.out.dir}/${client.out.dist.package}.zip" basedir="${client.out.dir}" />
	</target>
	
	<target name="client.configureDist" depends="client.configure">
		<property name="dist.build.out.dir" value="${hbox.build.dir}/dist" />
		<mkdir dir="${dist.build.out.dir}" />
	</target>
	
	<target name="client.dist.win" if="ifWin" depends="client.configureDist">
		<echo message="NSIS Dir:           ${tools.nsis.dir}" />
		<copy file="${client.base.dir}/scripts/installer/client-installer.nsi" tofile="${dist.build.out.dir}/client-installer.nsi" overwrite="true" />
		<replace file="${dist.build.out.dir}/client-installer.nsi" token="@CLIENT_INSTALLER_OUTPUT@" value="${dist.out.dir}/${client.out.dist.package}.exe" />
		<replace file="${dist.build.out.dir}/client-installer.nsi" token="@CLIENT_OUT_BIN_DIR@" value="${client.out.dir}" />
		<replace file="${dist.build.out.dir}/client-installer.nsi" token="@CLIENT_INSTALL_DIR@" value="${client.install.dir}" />
		<exec executable="${tools.nsis.dir}\makensis.exe" failonerror="true">
			<arg value="/DPROJECT_NAME=Hyperbox Client" />
			<arg value="/V2"/>
			<arg value="${dist.build.out.dir}/client-installer.nsi" />
		</exec>
	</target>
	
	<target name="client.dist.linux" if="ifLinux" depends="client.configureDist">
		<copy file="${client.dir}/hyperbox-client.desktop" tofile="${client.out.dir}/hyperbox-client.desktop" overwrite="true" />
		<copy file="scripts/client/installer/client-installer.sh" tofile="${client.out.dir}/client-installer.sh" overwrite="true" />
		<chmod file="${client.out.dir}/client-installer.sh" perm="ugo+rx" />
		<exec executable="makeself" failonerror="true">
			<arg value="${client.out.dir}" />
			<arg value="${dist.out.dir}/${client.out.dist.package}.run" />
			<arg value="Hyperbox client" />
			<arg value="./client-installer.sh" />
		</exec>
	</target>
	
	<extension-point name="client.dist" depends="client.dist.win, client.dist.linux" />
	
	<extension-point name="client.all" depends="client.build, client.build.zip, client.dist" />
	
	<extension-point name="clean" depends="client.clean" />
	
	<extension-point name="build" depends="client.build" />

</project>
